[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cmakepresets"
dynamic = ["version"]
authors = [{ name = "Thomas Kristensen", email = "thomas@sl.m04r.space" }]
description = "A library for parsing CMakePresets.json"
requires-python = ">=3.11"
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E.*"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
]
keywords = ["cmake", "CMakePresets.json", "presets"]
dependencies = ["jsonschema>=4.23.0", "requests>=2.32.3", "rich>=13.9.4"]

[project.urls]
Homepage = "https://github.com/tkk2112/cmakepresets"
Issues = "https://github.com/tkk2112/cmakepresets/issues"
Repository = "https://github.com/tkk2112/cmakepresets.git"

[project.scripts]
cmakepresets = "cmakepresets:cli.main"

[tool.hatch.version]
path = "src/cmakepresets/__init__.py"

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[[tool.uv.index]]
name = "pypi"
url = "https://pypi.org/simple/"
publish-url = "https://upload.pypi.org/legacy/"
explicit = true

[tool.ruff]
line-length = 158
lint.select = ["E", "F", "W", "C90"]

[tool.isort]
profile = "black"
line_length = 158

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests", "README.md"]
addopts = [
    "--import-mode=importlib",
    "--strict-markers",
    "--random-order",
    "--cov=src/cmakepresets",
    "--no-cov-on-fail",
    "--cov-branch",
    "--cov-report=term",
    "--cov-report=html",
    "--doctest-modules",
    "--doctest-glob=README.md"
]

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_optional = true

[tool.uv.sources]
pyproject-aliases = { git = "https://github.com/tkk2112/pyproject_aliases.git" }

[dependency-groups]
dev = [
    "hatch>=1.14.0",
    "mypy>=1.15.0",
    "pre-commit>=4.1.0",
    "pyfakefs>=5.7.4",
    "pyproject-aliases",
    "pytest-cov>=6.0.0",
    "pytest>=8.3.5",
    "types-jsonschema>=4.23.0.20241208",
    "types-requests>=2.32.0.20250306",
    "pytest-random-order>=1.1.1",
    "no-implicit-optional>=1.4",
]

[tool.aliases]
check = "uv run pre-commit run --all-files"
test = "uv run pytest"
